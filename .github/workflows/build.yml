name: compile

on:
  push:
    branches: [ master, actiontest ]
  pull_request:
    branches: [ master ]

jobs:
  ubuntuBuild1804:
    runs-on: ubuntu-latest
    container: "ubuntu:18.04"
    steps:
    - uses: actions/checkout@v2
    - name: deps
      run: |
        export DEBIAN_FRONTEND=noninteractive
        export TZ=Asia/Singapore
        apt-get update
        apt-get upgrade -y
        apt-get install -y sudo
        apt-get install -y make gcc patch git openssh-client file pkg-config wget curl swig netpbm wcslib-dev wcslib-tools zlib1g-dev libbz2-dev libcairo2-dev libcfitsio-dev libcfitsio-bin libgsl-dev libjpeg-dev libnetpbm10-dev libpng-dev python3-pip python3.7-dev libpython3.7-dev ca-certificates
        sudo python3.7 -m pip install pip
        sudo python3.7 -m pip install numpy fitsio
        apt-get remove -y python3.6
    - name: make
      run: sh ./github/make.sh
    - name: Tests
      run: sh ./github/test.sh
  ubuntuBuild2004:
    runs-on: ubuntu-latest
    container: "ubuntu:20.04"
    steps:
    - uses: actions/checkout@v2
    - name: deps
      run: |
        apt-get update
        apt-get upgrade -y
        apt-get install -y sudo
        apt-get install -y make gcc patch git openssh-client file pkg-config wget curl swig netpbm wcslib-dev wcslib-tools zlib1g-dev libbz2-dev libcairo2-dev libcfitsio-dev libcfitsio-bin libgsl-dev libjpeg-dev libnetpbm10-dev libpng-dev python3-pip python3-dev libpython3-dev ca-certificates
        sudo pip3 install numpy fitsio
    - name: make
      run: sh ./github/make.sh
    - name: Tests
      run: sh ./github/test.sh
  centosBuild:
    runs-on: ubuntu-latest
    container: "tgagor/centos-stream"
    steps:
    - uses: actions/checkout@v2
    - name: deps
      run: |
        yum -y install patch gcc make file pkg-config wget curl swig git
        yum -y install gsl-devel cairo-devel libpng-devel libjpeg-turbo-devel zlib-devel bzip2-devel swig python36-devel
        dnf -y install dnf-plugins-core
        yum -y install epel-release
        dnf install -y 'dnf-command(config-manager)'
        dnf repolist
        dnf config-manager --set-enabled powertools
        dnf repolist
        yum -y install netpbm netpbm-devel netpbm-progs
        yum -y install cfitsio cfitsio-devel wcslib wcslib-utils wcslib-devel
        ln -s /usr/lib64/libnetpbm.so.11 /usr/local/lib/libnetpbm.so
        pip3 install numpy fitsio
    - name: make
      run: sh ./github/make.sh
    - name: Tests
      run: sh ./github/test.sh
